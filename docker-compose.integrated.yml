version: "3.3"
services:
  etherwrapper:
    image: '${WRAPPER_HOST}dev:${TAG-latest}'
    container_name: ${WRAPPER_HOST}-integrated
    volumes:
      - ./${WRAPPER_HOST}:/app
    environment:
      - BASE_PATH=/${WRAPPER_HOST}
    build:
      context: ./${WRAPPER_HOST}
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${STACK_NAME?Variable not set}-${WRAPPER_HOST}-http.rule=PathPrefix(`/${WRAPPER_HOST}`)
      - traefik.http.services.${STACK_NAME?Variable not set}-${WRAPPER_HOST}.loadbalancer.server.port=${WRAPPER_PORT}
      - traefik.http.routers.${STACK_NAME?Variable not set}-${WRAPPER_HOST}-http.middlewares=${WRAPPER_HOST}-stripprefix
      - traefik.http.middlewares.${WRAPPER_HOST}-stripprefix.stripprefix.prefixes=/${WRAPPER_HOST}

  etherpad:
    container_name: ${ETHERPAD_HOST}-integrated
    build:
      context: ./${ETHERPAD_HOST}
      dockerfile: Dockerfile
      args:
        - ETHERPAD_API_KEY=${ETHERPAD_API_KEY}
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${STACK_NAME?Variable not set}-${ETHERPAD_HOST}-http.rule=PathPrefix(`/${ETHERPAD_HOST}`)
      - traefik.http.services.${STACK_NAME?Variable not set}-${ETHERPAD_HOST}.loadbalancer.server.port=${ETHERPAD_PORT}
      - traefik.http.routers.${STACK_NAME?Variable not set}-${ETHERPAD_HOST}-http.middlewares=${ETHERPAD_HOST}-stripprefix
      - traefik.http.middlewares.${ETHERPAD_HOST}-stripprefix.stripprefix.prefixes=/${ETHERPAD_HOST}